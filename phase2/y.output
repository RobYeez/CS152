State 0 conflicts: 1 shift/reduce, 1 reduce/reduce
State 3 conflicts: 1 shift/reduce, 1 reduce/reduce
State 4 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: %empty
    2           | functions prog_start

    3 functions: %empty
    4          | function functions

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    6 declarations: %empty
    7             | declaration SEMICOLON declarations

    8 declaration: identifiers COLON INTEGER
    9            | identifiers COLON ARRAY LSQUARE NUMBER RSQUARE OF INTEGER
   10            | identifiers error INTEGER

   11 identifiers: ident
   12            | ident COMMA identifiers

   13 ident: IDENT

   14 statements: %empty
   15           | statement SEMICOLON statements

   16 statement: var ASSIGN expression
   17          | IF bool_exp THEN statements ENDIF
   18          | IF bool_exp THEN statements ELSE statements ENDIF
   19          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   20          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   21          | FOREACH ident IN ident BEGINLOOP statements ENDLOOP
   22          | READ vars
   23          | WRITE vars
   24          | CONTINUE
   25          | RETURN expression

   26 bool_exp: relation_and_exp
   27         | relation_and_exp OR bool_exp

   28 relation_and_exp: relation_exp
   29                 | relation_exp AND relation_and_exp

   30 relation_exp: expression comp expression
   31             | TRUE
   32             | FALSE
   33             | LPAREN bool_exp RPAREN
   34             | NOT expression comp expression
   35             | NOT TRUE
   36             | NOT FALSE
   37             | NOT LPAREN bool_exp RPAREN

   38 comp: EQ
   39     | NEQ
   40     | GT
   41     | LT
   42     | GTE
   43     | LTE

   44 expression: multiplicative-expr
   45           | multiplicative-expr ADD expression
   46           | multiplicative-expr SUB expression

   47 multiplicative-expr: term
   48                    | term MULT multiplicative-expr
   49                    | term DIV multiplicative-expr
   50                    | term MOD multiplicative-expr

   51 term: var
   52     | NUMBER
   53     | LPAREN expression RPAREN
   54     | SUB var
   55     | SUB NUMBER
   56     | SUB LPAREN expression RPAREN
   57     | ident bterm

   58 bterm: LPAREN bterm_ex RPAREN
   59      | LPAREN RPAREN

   60 bterm_ex: expression
   61         | expression COMMA bterm_ex

   62 var: ident
   63    | ident LSQUARE expression RSQUARE

   64 vars: var
   65     | var COMMA vars


Terminals, with rules where they appear

$end (0) 0
error (256) 10
NUMBER (258) 9 52 55
IDENT (259) 13
FUNCTION (260) 5
BEGIN_PARAMS (261) 5
END_PARAMS (262) 5
BEGIN_LOCALS (263) 5
END_LOCALS (264) 5
BEGIN_BODY (265) 5
END_BODY (266) 5
INTEGER (267) 8 9 10
ARRAY (268) 9
OF (269) 9
IF (270) 17 18
THEN (271) 17 18
ENDIF (272) 17 18
ELSE (273) 18
WHILE (274) 19 20
DO (275) 20
FOREACH (276) 21
IN (277) 21
BEGINLOOP (278) 19 20 21
ENDLOOP (279) 19 20 21
CONTINUE (280) 24
READ (281) 22
WRITE (282) 23
TRUE (283) 31 35
FALSE (284) 32 36
RETURN (285) 25
SEMICOLON (286) 5 7 15
COMMA (287) 12 61 65
COLON (288) 8 9
LPAREN (289) 33 37 53 56 58 59
RPAREN (290) 33 37 53 56 58 59
LSQUARE (291) 9 63
RSQUARE (292) 9 63
SUB (293) 46 54 55 56
ADD (294) 45
MULT (295) 48
DIV (296) 49
MOD (297) 50
EQ (298) 38
NEQ (299) 39
LT (300) 41
GT (301) 40
LTE (302) 43
GTE (303) 42
AND (304) 29
OR (305) 27
NOT (306) 34 35 36 37
ASSIGN (307) 16


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1 2, on right: 0 2
functions (55)
    on left: 3 4, on right: 2 4
function (56)
    on left: 5, on right: 4
declarations (57)
    on left: 6 7, on right: 5 7
declaration (58)
    on left: 8 9 10, on right: 7
identifiers (59)
    on left: 11 12, on right: 8 9 10 12
ident (60)
    on left: 13, on right: 5 11 12 21 57 62 63
statements (61)
    on left: 14 15, on right: 5 15 17 18 19 20 21
statement (62)
    on left: 16 17 18 19 20 21 22 23 24 25, on right: 15
bool_exp (63)
    on left: 26 27, on right: 17 18 19 20 27 33 37
relation_and_exp (64)
    on left: 28 29, on right: 26 27 29
relation_exp (65)
    on left: 30 31 32 33 34 35 36 37, on right: 28 29
comp (66)
    on left: 38 39 40 41 42 43, on right: 30 34
expression (67)
    on left: 44 45 46, on right: 16 25 30 34 45 46 53 56 60 61 63
multiplicative-expr (68)
    on left: 47 48 49 50, on right: 44 45 46 48 49 50
term (69)
    on left: 51 52 53 54 55 56 57, on right: 47 48 49 50
bterm (70)
    on left: 58 59, on right: 57
bterm_ex (71)
    on left: 60 61, on right: 58 61
var (72)
    on left: 62 63, on right: 16 51 54 64 65
vars (73)
    on left: 64 65, on right: 22 23 65


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $end      reduce using rule 1 (prog_start)
    $end      [reduce using rule 3 (functions)]
    FUNCTION  [reduce using rule 3 (functions)]
    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    5 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    ident  go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    2 prog_start: functions . prog_start

    FUNCTION  shift, and go to state 1

    $end      reduce using rule 1 (prog_start)
    $end      [reduce using rule 3 (functions)]
    FUNCTION  [reduce using rule 3 (functions)]
    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 8
    functions   go to state 3
    function    go to state 4


State 4

    4 functions: function . functions

    FUNCTION  shift, and go to state 1

    FUNCTION  [reduce using rule 3 (functions)]
    $default  reduce using rule 3 (functions)

    functions  go to state 9
    function   go to state 4


State 5

   13 ident: IDENT .

    $default  reduce using rule 13 (ident)


State 6

    5 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 10


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    2 prog_start: functions prog_start .

    $default  reduce using rule 2 (prog_start)


State 9

    4 functions: function functions .

    $default  reduce using rule 4 (functions)


State 10

    5 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 11


State 11

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 6 (declarations)

    declarations  go to state 12
    declaration   go to state 13
    identifiers   go to state 14
    ident         go to state 15


State 12

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 16


State 13

    7 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 17


State 14

    8 declaration: identifiers . COLON INTEGER
    9            | identifiers . COLON ARRAY LSQUARE NUMBER RSQUARE OF INTEGER
   10            | identifiers . error INTEGER

    error  shift, and go to state 18
    COLON  shift, and go to state 19


State 15

   11 identifiers: ident .
   12            | ident . COMMA identifiers

    COMMA  shift, and go to state 20

    $default  reduce using rule 11 (identifiers)


State 16

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 21


State 17

    7 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 6 (declarations)

    declarations  go to state 22
    declaration   go to state 13
    identifiers   go to state 14
    ident         go to state 15


State 18

   10 declaration: identifiers error . INTEGER

    INTEGER  shift, and go to state 23


State 19

    8 declaration: identifiers COLON . INTEGER
    9            | identifiers COLON . ARRAY LSQUARE NUMBER RSQUARE OF INTEGER

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25


State 20

   12 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 5

    identifiers  go to state 26
    ident        go to state 15


State 21

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 6 (declarations)

    declarations  go to state 27
    declaration   go to state 13
    identifiers   go to state 14
    ident         go to state 15


State 22

    7 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 7 (declarations)


State 23

   10 declaration: identifiers error INTEGER .

    $default  reduce using rule 10 (declaration)


State 24

    8 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 8 (declaration)


State 25

    9 declaration: identifiers COLON ARRAY . LSQUARE NUMBER RSQUARE OF INTEGER

    LSQUARE  shift, and go to state 28


State 26

   12 identifiers: ident COMMA identifiers .

    $default  reduce using rule 12 (identifiers)


State 27

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 29


State 28

    9 declaration: identifiers COLON ARRAY LSQUARE . NUMBER RSQUARE OF INTEGER

    NUMBER  shift, and go to state 30


State 29

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 31


State 30

    9 declaration: identifiers COLON ARRAY LSQUARE NUMBER . RSQUARE OF INTEGER

    RSQUARE  shift, and go to state 32


State 31

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IDENT     shift, and go to state 5
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    $default  reduce using rule 14 (statements)

    ident       go to state 41
    statements  go to state 42
    statement   go to state 43
    var         go to state 44


State 32

    9 declaration: identifiers COLON ARRAY LSQUARE NUMBER RSQUARE . OF INTEGER

    OF  shift, and go to state 45


State 33

   17 statement: IF . bool_exp THEN statements ENDIF
   18          | IF . bool_exp THEN statements ELSE statements ENDIF

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    TRUE    shift, and go to state 47
    FALSE   shift, and go to state 48
    LPAREN  shift, and go to state 49
    SUB     shift, and go to state 50
    NOT     shift, and go to state 51

    ident                go to state 52
    bool_exp             go to state 53
    relation_and_exp     go to state 54
    relation_exp         go to state 55
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 34

   19 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    TRUE    shift, and go to state 47
    FALSE   shift, and go to state 48
    LPAREN  shift, and go to state 49
    SUB     shift, and go to state 50
    NOT     shift, and go to state 51

    ident                go to state 52
    bool_exp             go to state 60
    relation_and_exp     go to state 54
    relation_exp         go to state 55
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 35

   20 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 61


State 36

   21 statement: FOREACH . ident IN ident BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 5

    ident  go to state 62


State 37

   24 statement: CONTINUE .

    $default  reduce using rule 24 (statement)


State 38

   22 statement: READ . vars

    IDENT  shift, and go to state 5

    ident  go to state 41
    var    go to state 63
    vars   go to state 64


State 39

   23 statement: WRITE . vars

    IDENT  shift, and go to state 5

    ident  go to state 41
    var    go to state 63
    vars   go to state 65


State 40

   25 statement: RETURN . expression

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    LPAREN  shift, and go to state 66
    SUB     shift, and go to state 50

    ident                go to state 52
    expression           go to state 67
    multiplicative-expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 41

   62 var: ident .
   63    | ident . LSQUARE expression RSQUARE

    LSQUARE  shift, and go to state 68

    $default  reduce using rule 62 (var)


State 42

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 69


State 43

   15 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 70


State 44

   16 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 71


State 45

    9 declaration: identifiers COLON ARRAY LSQUARE NUMBER RSQUARE OF . INTEGER

    INTEGER  shift, and go to state 72


State 46

   52 term: NUMBER .

    $default  reduce using rule 52 (term)


State 47

   31 relation_exp: TRUE .

    $default  reduce using rule 31 (relation_exp)


State 48

   32 relation_exp: FALSE .

    $default  reduce using rule 32 (relation_exp)


State 49

   33 relation_exp: LPAREN . bool_exp RPAREN
   53 term: LPAREN . expression RPAREN

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    TRUE    shift, and go to state 47
    FALSE   shift, and go to state 48
    LPAREN  shift, and go to state 49
    SUB     shift, and go to state 50
    NOT     shift, and go to state 51

    ident                go to state 52
    bool_exp             go to state 73
    relation_and_exp     go to state 54
    relation_exp         go to state 55
    expression           go to state 74
    multiplicative-expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 50

   54 term: SUB . var
   55     | SUB . NUMBER
   56     | SUB . LPAREN expression RPAREN

    NUMBER  shift, and go to state 75
    IDENT   shift, and go to state 5
    LPAREN  shift, and go to state 76

    ident  go to state 41
    var    go to state 77


State 51

   34 relation_exp: NOT . expression comp expression
   35             | NOT . TRUE
   36             | NOT . FALSE
   37             | NOT . LPAREN bool_exp RPAREN

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    TRUE    shift, and go to state 78
    FALSE   shift, and go to state 79
    LPAREN  shift, and go to state 80
    SUB     shift, and go to state 50

    ident                go to state 52
    expression           go to state 81
    multiplicative-expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 52

   57 term: ident . bterm
   62 var: ident .
   63    | ident . LSQUARE expression RSQUARE

    LPAREN   shift, and go to state 82
    LSQUARE  shift, and go to state 68

    $default  reduce using rule 62 (var)

    bterm  go to state 83


State 53

   17 statement: IF bool_exp . THEN statements ENDIF
   18          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 84


State 54

   26 bool_exp: relation_and_exp .
   27         | relation_and_exp . OR bool_exp

    OR  shift, and go to state 85

    $default  reduce using rule 26 (bool_exp)


State 55

   28 relation_and_exp: relation_exp .
   29                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 86

    $default  reduce using rule 28 (relation_and_exp)


State 56

   30 relation_exp: expression . comp expression

    EQ   shift, and go to state 87
    NEQ  shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    LTE  shift, and go to state 91
    GTE  shift, and go to state 92

    comp  go to state 93


State 57

   44 expression: multiplicative-expr .
   45           | multiplicative-expr . ADD expression
   46           | multiplicative-expr . SUB expression

    SUB  shift, and go to state 94
    ADD  shift, and go to state 95

    $default  reduce using rule 44 (expression)


State 58

   47 multiplicative-expr: term .
   48                    | term . MULT multiplicative-expr
   49                    | term . DIV multiplicative-expr
   50                    | term . MOD multiplicative-expr

    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98

    $default  reduce using rule 47 (multiplicative-expr)


State 59

   51 term: var .

    $default  reduce using rule 51 (term)


State 60

   19 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 99


State 61

   20 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    IDENT     shift, and go to state 5
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    $default  reduce using rule 14 (statements)

    ident       go to state 41
    statements  go to state 100
    statement   go to state 43
    var         go to state 44


State 62

   21 statement: FOREACH ident . IN ident BEGINLOOP statements ENDLOOP

    IN  shift, and go to state 101


State 63

   64 vars: var .
   65     | var . COMMA vars

    COMMA  shift, and go to state 102

    $default  reduce using rule 64 (vars)


State 64

   22 statement: READ vars .

    $default  reduce using rule 22 (statement)


State 65

   23 statement: WRITE vars .

    $default  reduce using rule 23 (statement)


State 66

   53 term: LPAREN . expression RPAREN

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    LPAREN  shift, and go to state 66
    SUB     shift, and go to state 50

    ident                go to state 52
    expression           go to state 103
    multiplicative-expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 67

   25 statement: RETURN expression .

    $default  reduce using rule 25 (statement)


State 68

   63 var: ident LSQUARE . expression RSQUARE

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    LPAREN  shift, and go to state 66
    SUB     shift, and go to state 50

    ident                go to state 52
    expression           go to state 104
    multiplicative-expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 69

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 5 (function)


State 70

   15 statements: statement SEMICOLON . statements

    IDENT     shift, and go to state 5
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    $default  reduce using rule 14 (statements)

    ident       go to state 41
    statements  go to state 105
    statement   go to state 43
    var         go to state 44


State 71

   16 statement: var ASSIGN . expression

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    LPAREN  shift, and go to state 66
    SUB     shift, and go to state 50

    ident                go to state 52
    expression           go to state 106
    multiplicative-expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 72

    9 declaration: identifiers COLON ARRAY LSQUARE NUMBER RSQUARE OF INTEGER .

    $default  reduce using rule 9 (declaration)


State 73

   33 relation_exp: LPAREN bool_exp . RPAREN

    RPAREN  shift, and go to state 107


State 74

   30 relation_exp: expression . comp expression
   53 term: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 108
    EQ      shift, and go to state 87
    NEQ     shift, and go to state 88
    LT      shift, and go to state 89
    GT      shift, and go to state 90
    LTE     shift, and go to state 91
    GTE     shift, and go to state 92

    comp  go to state 93


State 75

   55 term: SUB NUMBER .

    $default  reduce using rule 55 (term)


State 76

   56 term: SUB LPAREN . expression RPAREN

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    LPAREN  shift, and go to state 66
    SUB     shift, and go to state 50

    ident                go to state 52
    expression           go to state 109
    multiplicative-expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 77

   54 term: SUB var .

    $default  reduce using rule 54 (term)


State 78

   35 relation_exp: NOT TRUE .

    $default  reduce using rule 35 (relation_exp)


State 79

   36 relation_exp: NOT FALSE .

    $default  reduce using rule 36 (relation_exp)


State 80

   37 relation_exp: NOT LPAREN . bool_exp RPAREN
   53 term: LPAREN . expression RPAREN

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    TRUE    shift, and go to state 47
    FALSE   shift, and go to state 48
    LPAREN  shift, and go to state 49
    SUB     shift, and go to state 50
    NOT     shift, and go to state 51

    ident                go to state 52
    bool_exp             go to state 110
    relation_and_exp     go to state 54
    relation_exp         go to state 55
    expression           go to state 74
    multiplicative-expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 81

   34 relation_exp: NOT expression . comp expression

    EQ   shift, and go to state 87
    NEQ  shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    LTE  shift, and go to state 91
    GTE  shift, and go to state 92

    comp  go to state 111


State 82

   58 bterm: LPAREN . bterm_ex RPAREN
   59      | LPAREN . RPAREN

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    LPAREN  shift, and go to state 66
    RPAREN  shift, and go to state 112
    SUB     shift, and go to state 50

    ident                go to state 52
    expression           go to state 113
    multiplicative-expr  go to state 57
    term                 go to state 58
    bterm_ex             go to state 114
    var                  go to state 59


State 83

   57 term: ident bterm .

    $default  reduce using rule 57 (term)


State 84

   17 statement: IF bool_exp THEN . statements ENDIF
   18          | IF bool_exp THEN . statements ELSE statements ENDIF

    IDENT     shift, and go to state 5
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    $default  reduce using rule 14 (statements)

    ident       go to state 41
    statements  go to state 115
    statement   go to state 43
    var         go to state 44


State 85

   27 bool_exp: relation_and_exp OR . bool_exp

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    TRUE    shift, and go to state 47
    FALSE   shift, and go to state 48
    LPAREN  shift, and go to state 49
    SUB     shift, and go to state 50
    NOT     shift, and go to state 51

    ident                go to state 52
    bool_exp             go to state 116
    relation_and_exp     go to state 54
    relation_exp         go to state 55
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 86

   29 relation_and_exp: relation_exp AND . relation_and_exp

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    TRUE    shift, and go to state 47
    FALSE   shift, and go to state 48
    LPAREN  shift, and go to state 49
    SUB     shift, and go to state 50
    NOT     shift, and go to state 51

    ident                go to state 52
    relation_and_exp     go to state 117
    relation_exp         go to state 55
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 87

   38 comp: EQ .

    $default  reduce using rule 38 (comp)


State 88

   39 comp: NEQ .

    $default  reduce using rule 39 (comp)


State 89

   41 comp: LT .

    $default  reduce using rule 41 (comp)


State 90

   40 comp: GT .

    $default  reduce using rule 40 (comp)


State 91

   43 comp: LTE .

    $default  reduce using rule 43 (comp)


State 92

   42 comp: GTE .

    $default  reduce using rule 42 (comp)


State 93

   30 relation_exp: expression comp . expression

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    LPAREN  shift, and go to state 66
    SUB     shift, and go to state 50

    ident                go to state 52
    expression           go to state 118
    multiplicative-expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 94

   46 expression: multiplicative-expr SUB . expression

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    LPAREN  shift, and go to state 66
    SUB     shift, and go to state 50

    ident                go to state 52
    expression           go to state 119
    multiplicative-expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 95

   45 expression: multiplicative-expr ADD . expression

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    LPAREN  shift, and go to state 66
    SUB     shift, and go to state 50

    ident                go to state 52
    expression           go to state 120
    multiplicative-expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 96

   48 multiplicative-expr: term MULT . multiplicative-expr

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    LPAREN  shift, and go to state 66
    SUB     shift, and go to state 50

    ident                go to state 52
    multiplicative-expr  go to state 121
    term                 go to state 58
    var                  go to state 59


State 97

   49 multiplicative-expr: term DIV . multiplicative-expr

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    LPAREN  shift, and go to state 66
    SUB     shift, and go to state 50

    ident                go to state 52
    multiplicative-expr  go to state 122
    term                 go to state 58
    var                  go to state 59


State 98

   50 multiplicative-expr: term MOD . multiplicative-expr

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    LPAREN  shift, and go to state 66
    SUB     shift, and go to state 50

    ident                go to state 52
    multiplicative-expr  go to state 123
    term                 go to state 58
    var                  go to state 59


State 99

   19 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 5
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    $default  reduce using rule 14 (statements)

    ident       go to state 41
    statements  go to state 124
    statement   go to state 43
    var         go to state 44


State 100

   20 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 125


State 101

   21 statement: FOREACH ident IN . ident BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 5

    ident  go to state 126


State 102

   65 vars: var COMMA . vars

    IDENT  shift, and go to state 5

    ident  go to state 41
    var    go to state 63
    vars   go to state 127


State 103

   53 term: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 108


State 104

   63 var: ident LSQUARE expression . RSQUARE

    RSQUARE  shift, and go to state 128


State 105

   15 statements: statement SEMICOLON statements .

    $default  reduce using rule 15 (statements)


State 106

   16 statement: var ASSIGN expression .

    $default  reduce using rule 16 (statement)


State 107

   33 relation_exp: LPAREN bool_exp RPAREN .

    $default  reduce using rule 33 (relation_exp)


State 108

   53 term: LPAREN expression RPAREN .

    $default  reduce using rule 53 (term)


State 109

   56 term: SUB LPAREN expression . RPAREN

    RPAREN  shift, and go to state 129


State 110

   37 relation_exp: NOT LPAREN bool_exp . RPAREN

    RPAREN  shift, and go to state 130


State 111

   34 relation_exp: NOT expression comp . expression

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    LPAREN  shift, and go to state 66
    SUB     shift, and go to state 50

    ident                go to state 52
    expression           go to state 131
    multiplicative-expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 112

   59 bterm: LPAREN RPAREN .

    $default  reduce using rule 59 (bterm)


State 113

   60 bterm_ex: expression .
   61         | expression . COMMA bterm_ex

    COMMA  shift, and go to state 132

    $default  reduce using rule 60 (bterm_ex)


State 114

   58 bterm: LPAREN bterm_ex . RPAREN

    RPAREN  shift, and go to state 133


State 115

   17 statement: IF bool_exp THEN statements . ENDIF
   18          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 134
    ELSE   shift, and go to state 135


State 116

   27 bool_exp: relation_and_exp OR bool_exp .

    $default  reduce using rule 27 (bool_exp)


State 117

   29 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 29 (relation_and_exp)


State 118

   30 relation_exp: expression comp expression .

    $default  reduce using rule 30 (relation_exp)


State 119

   46 expression: multiplicative-expr SUB expression .

    $default  reduce using rule 46 (expression)


State 120

   45 expression: multiplicative-expr ADD expression .

    $default  reduce using rule 45 (expression)


State 121

   48 multiplicative-expr: term MULT multiplicative-expr .

    $default  reduce using rule 48 (multiplicative-expr)


State 122

   49 multiplicative-expr: term DIV multiplicative-expr .

    $default  reduce using rule 49 (multiplicative-expr)


State 123

   50 multiplicative-expr: term MOD multiplicative-expr .

    $default  reduce using rule 50 (multiplicative-expr)


State 124

   19 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 136


State 125

   20 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 137


State 126

   21 statement: FOREACH ident IN ident . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 138


State 127

   65 vars: var COMMA vars .

    $default  reduce using rule 65 (vars)


State 128

   63 var: ident LSQUARE expression RSQUARE .

    $default  reduce using rule 63 (var)


State 129

   56 term: SUB LPAREN expression RPAREN .

    $default  reduce using rule 56 (term)


State 130

   37 relation_exp: NOT LPAREN bool_exp RPAREN .

    $default  reduce using rule 37 (relation_exp)


State 131

   34 relation_exp: NOT expression comp expression .

    $default  reduce using rule 34 (relation_exp)


State 132

   61 bterm_ex: expression COMMA . bterm_ex

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    LPAREN  shift, and go to state 66
    SUB     shift, and go to state 50

    ident                go to state 52
    expression           go to state 113
    multiplicative-expr  go to state 57
    term                 go to state 58
    bterm_ex             go to state 139
    var                  go to state 59


State 133

   58 bterm: LPAREN bterm_ex RPAREN .

    $default  reduce using rule 58 (bterm)


State 134

   17 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 17 (statement)


State 135

   18 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    IDENT     shift, and go to state 5
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    $default  reduce using rule 14 (statements)

    ident       go to state 41
    statements  go to state 140
    statement   go to state 43
    var         go to state 44


State 136

   19 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 19 (statement)


State 137

   20 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    NUMBER  shift, and go to state 46
    IDENT   shift, and go to state 5
    TRUE    shift, and go to state 47
    FALSE   shift, and go to state 48
    LPAREN  shift, and go to state 49
    SUB     shift, and go to state 50
    NOT     shift, and go to state 51

    ident                go to state 52
    bool_exp             go to state 141
    relation_and_exp     go to state 54
    relation_exp         go to state 55
    expression           go to state 56
    multiplicative-expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 138

   21 statement: FOREACH ident IN ident BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 5
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40

    $default  reduce using rule 14 (statements)

    ident       go to state 41
    statements  go to state 142
    statement   go to state 43
    var         go to state 44


State 139

   61 bterm_ex: expression COMMA bterm_ex .

    $default  reduce using rule 61 (bterm_ex)


State 140

   18 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 143


State 141

   20 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 20 (statement)


State 142

   21 statement: FOREACH ident IN ident BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 144


State 143

   18 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 18 (statement)


State 144

   21 statement: FOREACH ident IN ident BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 21 (statement)
